{"version":3,"sources":["cache/MemoryCache.js"],"names":[],"mappings":"wjBAAA,8B,qRAEqB,W,YACnB,sBAAc,mCACZ,KAAK,IAAL,CAAY,EAAZ,CACA,KAAK,MAAL,CAAc,EAAd,CACD,C,wDAEI,G,CAAK,K,CAAO,K,CAAQ,CACvB,KAAK,KAAL,CAAW,GAAX,EACA,KAAK,UAAL,CAAgB,GAAhB,EACA,KAAK,IAAL,CAAU,GAAV,EAAiB,KAAjB,CACA,GAAI,KAAJ,CAAW,CACT,KAAK,UAAL,CAAgB,GAAhB,CAAqB,KAArB,EACD,CACF,C,8CAEW,G,CAAK,CACf,GAAI,KAAK,MAAL,CAAY,GAAZ,CAAJ,CAAsB,aAAa,KAAK,MAAL,CAAY,GAAZ,CAAb,EACvB,C,iDAEc,CACb,IAAK,IAAI,GAAT,IAAgB,KAAK,MAArB,CAA6B,CAC3B,KAAK,UAAL,CAAgB,GAAhB,EACD,CACF,C,gCAEI,G,CAAK,CACR,GAAI,KAAK,IAAL,CAAU,GAAV,CAAJ,CAAoB,OAAO,KAAK,IAAL,CAAU,GAAV,CAAP,CAApB,KACK,OAAO,IAAP,CACN,C,oCAEM,G,CAAK,CACV,GAAI,GAAJ,CAAS,CACP,GAAI,KAAK,IAAL,CAAU,GAAV,CAAJ,CAAoB,OAAO,KAAK,IAAL,CAAU,GAAV,CAAP,C;AAErB,CAHD,KAGO,CACL,KAAK,IAAL,CAAY,EAAZ,CACA,KAAK,WAAL,GACD,CACF,C,sCAEO,G,CAAK,CACX,GAAI,KAAK,IAAL,CAAU,GAAV,CAAJ,CAAoB,OAAO,IAAP,CAApB,KACK,OAAO,KAAP,CACN,C,8CAEW,G,CAAK,K,CAAO,gBACtB,GAAI,GAAJ,CAAS,KAAK,MAAL,CAAY,GAAZ,EAAmB,WAAW,kBAAM,MAAK,KAAL,CAAW,GAAX,CAAN,EAAX,CAAkC,KAAlC,CAAnB,CAAT,KACK,WAAW,kBAAM,MAAK,KAAL,EAAN,EAAX,CAA+B,KAA/B,EACN,C,2CAhDkB,W","file":"cache/MemoryCache.js","sourcesContent":["import moment from 'moment';\n\nexport default class MemoryCache {\n  constructor() {\n    this.data = {};\n    this.timers = {};\n  }\n\n  put (key, value, timer)  {\n    this.clear(key);\n    this.clearTimer(key);\n    this.data[key] = value;\n    if (timer) {\n      this.clearAfter(key, timer);\n    }\n  }\n\n  clearTimer (key) {\n    if (this.timers[key]) clearTimeout(this.timers[key]);\n  }\n\n  clearTimers () {\n    for (var key in this.timers) {\n      this.clearTimer(key);\n    }\n  }\n\n  get (key) {\n    if (this.data[key]) return this.data[key];\n    else return null;\n  }\n\n  clear (key) {\n    if (key) {\n      if (this.data[key]) delete this.data[key];\n      // clearTimer(key);\n    } else {\n      this.data = {};\n      this.clearTimers();\n    }\n  }\n\n  exists (key) {\n    if (this.data[key]) return true;\n    else return false;\n  }\n\n  clearAfter (key, timer) {\n    if (key) this.timers[key] = setTimeout(() => this.clear(key), timer);\n    else setTimeout(() => this.clear(), timer);\n  }\n}"],"sourceRoot":"/source/"}
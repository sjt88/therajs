{"version":3,"sources":["cache/MemoryCache.js"],"names":[],"mappings":";;;;;;AAAA;;;;;;;;IAEqB,W;AACnB,yBAAc;AAAA;;AACZ,SAAK,IAAL,GAAY,EAAZ;AACA,SAAK,MAAL,GAAc,EAAd;AACD;;;;wBAEI,G,EAAK,K,EAAO,K,EAAQ;AACvB,WAAK,KAAL,CAAW,GAAX;AACA,WAAK,UAAL,CAAgB,GAAhB;AACA,WAAK,IAAL,CAAU,GAAV,IAAiB,KAAjB;AACA,UAAI,KAAJ,EAAW;AACT,aAAK,UAAL,CAAgB,GAAhB,EAAqB,KAArB;AACD;AACF;;;+BAEW,G,EAAK;AACf,UAAI,KAAK,MAAL,CAAY,GAAZ,CAAJ,EAAsB,aAAa,KAAK,MAAL,CAAY,GAAZ,CAAb;AACvB;;;kCAEc;AACb,WAAK,IAAI,GAAT,IAAgB,KAAK,MAArB,EAA6B;AAC3B,aAAK,UAAL,CAAgB,GAAhB;AACD;AACF;;;wBAEI,G,EAAK;AACR,UAAI,KAAK,IAAL,CAAU,GAAV,CAAJ,EAAoB,OAAO,KAAK,IAAL,CAAU,GAAV,CAAP,CAApB,KACK,OAAO,IAAP;AACN;;;0BAEM,G,EAAK;AACV,UAAI,GAAJ,EAAS;AACP,YAAI,KAAK,IAAL,CAAU,GAAV,CAAJ,EAAoB,OAAO,KAAK,IAAL,CAAU,GAAV,CAAP;;AAErB,OAHD,MAGO;AACL,eAAK,IAAL,GAAY,EAAZ;AACA,eAAK,WAAL;AACD;AACF;;;2BAEO,G,EAAK;AACX,UAAI,KAAK,IAAL,CAAU,GAAV,CAAJ,EAAoB,OAAO,IAAP,CAApB,KACK,OAAO,KAAP;AACN;;;+BAEW,G,EAAK,K,EAAO;AAAA;;AACtB,UAAI,GAAJ,EAAS,KAAK,MAAL,CAAY,GAAZ,IAAmB,WAAW;AAAA,eAAM,MAAK,KAAL,CAAW,GAAX,CAAN;AAAA,OAAX,EAAkC,KAAlC,CAAnB,CAAT,KACK,WAAW;AAAA,eAAM,MAAK,KAAL,EAAN;AAAA,OAAX,EAA+B,KAA/B;AACN;;;;;;kBAhDkB,W","file":"cache/MemoryCache.js","sourcesContent":["import moment from 'moment';\n\nexport default class MemoryCache {\n  constructor() {\n    this.data = {};\n    this.timers = {};\n  }\n\n  put (key, value, timer)  {\n    this.clear(key);\n    this.clearTimer(key);\n    this.data[key] = value;\n    if (timer) {\n      this.clearAfter(key, timer);\n    }\n  }\n\n  clearTimer (key) {\n    if (this.timers[key]) clearTimeout(this.timers[key]);\n  }\n\n  clearTimers () {\n    for (var key in this.timers) {\n      this.clearTimer(key);\n    }\n  }\n\n  get (key) {\n    if (this.data[key]) return this.data[key];\n    else return null;\n  }\n\n  clear (key) {\n    if (key) {\n      if (this.data[key]) delete this.data[key];\n      // clearTimer(key);\n    } else {\n      this.data = {};\n      this.clearTimers();\n    }\n  }\n\n  exists (key) {\n    if (this.data[key]) return true;\n    else return false;\n  }\n\n  clearAfter (key, timer) {\n    if (key) this.timers[key] = setTimeout(() => this.clear(key), timer);\n    else setTimeout(() => this.clear(), timer);\n  }\n}"],"sourceRoot":"/source/"}
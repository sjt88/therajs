{"version":3,"sources":["clients/XmlClient.js"],"names":[],"mappings":"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","file":"clients/XmlClient.js","sourcesContent":["import request from 'request';\nimport xml2js from 'xml2js';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport MemoryCache from '../cache/MemoryCache.js';\nimport { install } from 'source-map-support';\n\nconst xml2jsOptions = {\n  explicitArray: false,\n  explicitRoot: false,\n  explicitChildren: false,\n  mergeAttrs: true\n};\n\nfunction getMsDiff(start, end) {\n  start = moment(start);\n  end = moment(end);\n  return end.diff(start);\n}\n\nclass HTTPError {\n  constructor(statusCode, url, msg, code) {\n    this.errorType = 'HTTP_ERR';\n    this.error = {};\n    if (statusCode) this.error.statusCode = statusCode;\n    if (url) this.error.url = url;\n    if (msg) this.error.msg = msg;\n    if (code) this.error.code = code;\n  }\n}\n\nclass ApiRequest {\n  constructor(url, keyID, vCode, characterID) {\n    this.requestOptions = {\n      url: url,\n    };\n    this.baseQueryParams = {\n      keyID: keyID,\n      vCode: vCode\n    };\n\n    if (characterID) this.baseQueryParams.characterID = characterID;\n    install();\n  }\n\n  get(extraParams, extraRequestOptions) {\n    return new Promise((resolve, reject) => {\n      var requestParams = {qs:{}};\n      Object.assign(requestParams, this.requestOptions);\n      Object.assign(requestParams.qs, this.baseQueryParams, extraParams);\n\n      if (extraRequestOptions) Object.assign(requestParams, extraRequestOptions);\n\n      request.get(requestParams, (err, res, body) => {\n        if (err) {\n          reject({errorType: 'REQUEST_FAIL', error: err});\n          return;\n        }\n        if (res.statusCode !== 200) {\n          if (body) {\n            xml2js.parseString(body, xml2jsOptions, (err, result) => {\n              console.log(result);\n              if (err) reject(new HTTPError(res.statusCode, requestParams.url));\n              else reject(new HTTPError(res.statusCode, requestParams.url, result.error._, result.error.code));\n            });\n          } else {\n            reject({errorType: 'HTTP_ERR',error: {statusCode: res.statusCode, url: requestParams.url}});\n          }\n          return;\n        }\n\n        xml2js.parseString(body, xml2jsOptions, (err, result) => {\n          if (err) reject({errorType: 'XML_PARSE_ERR', error: err });\n          resolve(result);\n        });\n      });\n    });\n  }\n}\n\nclass XmlApiClient {\n  constructor(options) {\n    if (!options) options = {};\n    this.keyID = options.keyID ? options.keyID : null;\n    this.vCode = options.vCode ? options.vCode : null;\n    this.characterID = options.characterID ? options.characterID : null;\n    this.rootURL = 'https://api.eveonline.com';\n    this.endpointSuffix = '.xml.aspx';\n    this.cache = options.cache ? options.cache : new MemoryCache();\n    install();\n  }\n\n  get (path, extraParams, requestOptions, force) {\n    return new Promise((resolve, reject) => {\n\n      if (typeof extraParams === 'boolean') force = extraParams;\n      if (typeof requestOptions === 'boolean') force = requestOptions;\n      if (!extraParams) extraParams = {};\n      if (!requestOptions) requestOptions = {};\n\n      // pick up cached response, if one exists in the cache\n      if (this.cache.exists(path) && !force) {\n        var body = this.cache.get(path);\n        body.isCached = true;\n        resolve(body);\n        return;\n      }\n\n      // construct full URL to query\n      var url = this.getFullUrl(path);\n\n      // instantiate a new Api Request\n      new ApiRequest(url, this.keyID, this.vCode, this.characterID)\n        .get(extraParams, requestOptions)\n        .then((body) => {\n          // handle GET response\n\n          if (!body.result) {\n            reject({errorType: 'INVALID_RESPONSE', error: 'The Response from ' + url + ' was invalid.'});\n          }\n\n          var cacheStart = _.get(body, 'currentTime', false);\n          var cacheEnd = _.get(body, 'cachedUntil', false);\n\n          if (cacheStart && cacheEnd) {\n            // cache this response until the received cachedUntil time\n            // (timezone differences are taken into account as we're using the offset from currentTime)\n            timeout = getMsDiff(cacheStart, cacheEnd);\n            this.cache.put(path, body, timeout);\n          }\n\n          body.isCached = false;\n          resolve(body);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  /**\n   * sets the characterID which will be used in all API requests\n   * @param {Number} id - characterID\n   */\n  setCharacterID(id) {\n    this.characterID = id;\n    // return this;\n  }\n\n  /**\n   * sets the keyID which will be used in all API requests\n   * @param {Number} keyID - Eve Online API keyID\n   */\n  setKeyID(keyID) {\n    this.keyID = keyID;\n    return this;\n  }\n\n  /**\n   * sets the verification code which will be used in all API requests\n    */\n  setVCode(vCode) {\n    this.vCode = vCode;\n    return this;\n  }\n\n  /**\n   * Sets multiple configuration parameters at once\n   * @param {Object} config - e.g {characterID: <charID>, keyID: <keyID>, cache: new CustomCache()}\n   */\n  setConfig(config) {\n    for (var key in config) {\n      this[key] = config.key;\n    }\n    return config;\n  }\n\n  getFullUrl(path) {\n    return this.rootURL + '/' + path + this.endpointSuffix;\n  }\n}\n\nexport default XmlApiClient;"],"sourceRoot":"/source/"}
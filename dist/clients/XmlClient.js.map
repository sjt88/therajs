{"version":3,"sources":["clients/XmlClient.js"],"names":[],"mappings":"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","file":"clients/XmlClient.js","sourcesContent":["import request from 'request';\nimport xml2js from 'xml2js';\nimport _ from 'lodash';\nimport moment from 'moment';\nimport MemoryCache from '../cache/MemoryCache.js';\nimport { install } from 'source-map-support';\n\nconst xml2jsOptions = {\n  explicitArray: false,\n  explicitRoot: false,\n  explicitChildren: false,\n  mergeAttrs: true\n};\n\nfunction getMsDiff(start, end) {\n  start = moment(start);\n  end = moment(end);\n  return end.diff(start);\n}\n\nclass HTTPError {\n  constructor(statusCode, url, msg, code) {\n    this.errorType = 'HTTP_ERR';\n    this.error = {};\n    if (statusCode) this.error.statusCode = statusCode;\n    if (url) this.error.url = url;\n    if (msg) this.error.msg = msg;\n    if (code) this.error.code = code;\n  }\n}\n\nclass ApiRequest {\n  constructor(url, keyID, vCode, characterID) {\n    this.requestOptions = {\n      url: url,\n    };\n    this.baseQueryParams = {\n      keyID: keyID,\n      vCode: vCode\n    };\n\n    if (characterID) this.baseQueryParams.characterID = characterID;\n    install();\n  }\n\n  get(extraParams, extraRequestOptions) {\n    return new Promise((resolve, reject) => {\n      var requestParams = {qs:{}};\n      Object.assign(requestParams, this.requestOptions);\n      Object.assign(requestParams.qs, this.baseQueryParams, extraParams);\n\n      if (extraRequestOptions) Object.assign(requestParams, extraRequestOptions);\n\n      request.get(requestParams, (err, res, body) => {\n        if (err) {\n          reject({errorType: 'REQUEST_FAIL', error: err});\n          return;\n        }\n        if (res.statusCode !== 200) {\n          if (body) {\n            xml2js.parseString(body, xml2jsOptions, (err, result) => {\n              console.log(result);\n              if (err) reject(new HTTPError(res.statusCode, requestParams.url));\n              else reject(new HTTPError(res.statusCode, requestParams.url, result.error._, result.error.code));\n            });\n          } else {\n            reject({errorType: 'HTTP_ERR',error: {statusCode: res.statusCode, url: requestParams.url}});\n          }\n          return;\n        }\n\n        xml2js.parseString(body, xml2jsOptions, (err, result) => {\n          if (err) reject({errorType: 'XML_PARSE_ERR', error: err });\n          resolve(result);\n        });\n      });\n    });\n  }\n}\n\nclass XmlApiClient {\n  constructor(options) {\n    if (!options) options = {};\n    this.keyID = options.keyID ? options.keyID : null;\n    this.vCode = options.vCode ? options.vCode : null;\n    this.characterID = options.characterID ? options.characterID : null;\n    this.rootURL = 'https://api.eveonline.com';\n    this.endpointSuffix = '.xml.aspx';\n    this.cache = options.cache ? options.cache : new MemoryCache();\n    install();\n  }\n\n  get (path, extraParams, requestOptions, force) {\n    return new Promise((resolve, reject) => {\n\n      if (typeof extraParams === 'boolean') force = extraParams;\n      if (typeof requestOptions === 'boolean') force = requestOptions;\n      if (!extraParams) extraParams = {};\n      if (!requestOptions) requestOptions = {};\n\n      // pick up cached response, if one exists in the cache\n      if (this.cache.exists(path) && !force) {\n        var body = this.cache.get(path);\n        body.isCached = true;\n        resolve(body);\n        return;\n      }\n\n      // construct full URL to query\n      var url = this.getFullUrl(path);\n\n      // instantiate a new Api Request\n      new ApiRequest(url, this.keyID, this.vCode, this.characterID)\n        .get(extraParams, requestOptions)\n        .then((body) => {\n          // handle GET response\n\n          if (!body.result) {\n            reject({errorType: 'INVALID_RESPONSE', error: 'The Response from ' + url + ' was invalid.'});\n          }\n\n          var cacheStart = _.get(body, 'currentTime', false);\n          var cacheEnd = _.get(body, 'cachedUntil', false);\n\n          if (cacheStart && cacheEnd) {\n            // cache this response until the received cachedUntil time\n            // (timezone differences are taken into account as we're using the offset from currentTime)\n            timeout = getMsDiff(cacheStart, cacheEnd);\n            this.cache.put(path, body, timeout);\n          }\n\n          body.isCached = false;\n          resolve(body);\n        })\n        .catch((err) => {\n          reject(err);\n        });\n    });\n  }\n\n  /**\n   * sets the characterID which will be used in all API requests\n   * @param {Number} id - characterID\n   */\n  setCharacterID(id) {\n    this.characterID = id;\n    // return this;\n  }\n\n  /**\n   * sets the keyID which will be used in all API requests\n   * @param {Number} keyID - Eve Online API keyID\n   */\n  setKeyID(keyID) {\n    this.keyID = keyID;\n    return this;\n  }\n\n  /**\n   * sets the verification code which will be used in all API requests\n    */\n  setVCode(vCode) {\n    this.vCode = vCode;\n    return this;\n  }\n\n  /**\n   * Sets multiple configuration parameters at once\n   * @param {Object} config - e.g {characterID: <charID>, keyID: <keyID>, cache: new CustomCache()}\n   */\n  setConfig(config) {\n    for (var key in config) {\n      this[key] = config.key;\n    }\n    return config;\n  }\n\n  getFullUrl(path) {\n    return this.rootURL + '/' + path + this.endpointSuffix;\n  }\n}\n\nexport default XmlApiClient;"],"sourceRoot":"/source/"}